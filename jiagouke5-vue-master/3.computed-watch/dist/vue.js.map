{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/gloablAPI.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const strats = {};\r\nconst LIFECYCLE = [\r\n    'beforeCreate',\r\n    'created'\r\n]\r\nLIFECYCLE.forEach(hook => {\r\n    strats[hook] = function (p, c) {\r\n        //  {} {created:function(){}}   => {created:[fn]}\r\n        // {created:[fn]}  {created:function(){}} => {created:[fn,fn]}\r\n        if (c) { // 如果儿子有 父亲有   让父亲和儿子拼在一起\r\n            if (p) {\r\n                return p.concat(c);\r\n            } else {\r\n                return [c]; // 儿子有父亲没有 ，则将儿子包装成数组\r\n            }\r\n        } else {\r\n            return p; // 如果儿子没有则用父亲即可\r\n        }\r\n    }\r\n})\r\n\r\n \r\n\r\nexport function mergeOptions(parent, child) {\r\n    const options = {};\r\n    for (let key in parent) { // 循环老的  {}\r\n        mergeField(key);\r\n    }\r\n    for (let key in child) { // 循环老的   {a:1}\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key);\r\n        }\r\n    }\r\n    function mergeField(key) {\r\n        // 策略模式 用策略模式减少if /else\r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key])\r\n        } else {\r\n            // 如果不在策略中则以儿子为主\r\n            options[key] = child[key] || parent[key]; // 优先采用儿子，在采用父亲\r\n        }\r\n    }\r\n    return options;\r\n\r\n}","\r\nimport {mergeOptions} from './utils'\r\n\r\n\r\n\r\n\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    // 静态方法\r\n   \r\n    Vue.options = {}\r\n    Vue.mixin = function (mixin) {\r\n        // 我们期望将用户的选项和 全局的options进行合并 '\r\n        this.options = mergeOptions(this.options, mixin);\r\n        return this;\r\n    }\r\n\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\n\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译处理  \r\n\r\n\r\nexport function parseHTML(html) { // html最开始肯定是一个  </div>\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = []; // 用于存放元素的\r\n    let currentParent; // 指向的是栈中的最后一个\r\n    let root;\r\n\r\n    // 最终需要转化成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n    // 利用栈型结构 来构造一颗树\r\n    function start(tag, attrs) {\r\n        let node =  createASTElement(tag,attrs); // 创造一个ast节点\r\n        if(!root){ // 看一下是否是空树\r\n            root = node; // 如果为空则当前是树的根节点\r\n        } \r\n        if(currentParent){\r\n            node.parent = currentParent; // 只赋予了parent属性\r\n            currentParent.children.push(node); // 还需要让父亲记住自己\r\n        }\r\n        stack.push(node);\r\n        currentParent = node; // currentParent为栈中的最后一个\r\n    }\r\n    function chars(text) { // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g,' '); // 如果空格超过2就删除2个以上的\r\n        text && currentParent.children.push({\r\n            type:TEXT_TYPE,\r\n            text,\r\n            parent:currentParent\r\n        });\r\n    }\r\n    function end(tag) {\r\n       let node =  stack.pop();  // 弹出最后一个, 校验标签是否合法\r\n       currentParent = stack[stack.length - 1];\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            // 如果不是开始标签的结束 就一直匹配下去\r\n            let attr, end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match;\r\n        }\r\n        return false; // 不是开始标签\r\n    }\r\n    while (html) {\r\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n        // 如果textEnd > 0说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<');  // 如果indexOf中的索引是0 则说明是个标签\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n            if (startTagMatch) { // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd); // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length); // 解析到的文本 \r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    let str = ''// {name,value}\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            // color:red;background:red => {color:'red'}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => { // qs 库\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},` // a:b,c:d,\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本\r\n        let text = node.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            //_v( _s(name)+'hello' + _s(name))\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            // split\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index; // 匹配的位置  {{name}} hello  {{name}} hello \r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${ast.children.length ? `,${children}` : ''\r\n        })`)\r\n\r\n    return code;\r\n}\r\nexport function compileToFunction(template) {\r\n\r\n    // 1.就是将template 转化成ast语法树\r\n    let ast = parseHTML(template);\r\n\r\n    // 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\r\n\r\n    // 模板引擎的实现原理 就是 with  + new Function\r\n\r\n    let code = codegen(ast);\r\n    code = `with(this){return ${code}}`;\r\n    let render = new Function(code); // 根据代码生成render函数\r\n\r\n    //  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\r\n\r\n    return render;\r\n}\r\n\r\n\r\n// <xxx\r\n// <namepsace:xxx\r\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa","\r\nlet id = 0;\r\nclass Dep{\r\n    constructor(){\r\n        this.id = id++; // 属性的dep要收集watcher\r\n        this.subs = [];// 这里存放着当前属性对应的watcher有哪些\r\n    }\r\n    depend(){\r\n        // 这里我们不希望放重复的watcher，而且刚才只是一个单向的关系 dep -> watcher\r\n        // watcher 记录dep\r\n        // this.subs.push(Dep.target);\r\n\r\n        Dep.target.addDep(this); // 让watcher记住dep\r\n\r\n        // dep 和 watcher是一个多对多的关系 （一个属性可以在多个组件中使用 dep -> 多个watcher）\r\n        // 一个组件中由多个属性组成 （一个watcher 对应多个dep）\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    notify(){\r\n        this.subs.forEach(watcher=>watcher.update()); // 告诉watcher要更新了\r\n    }\r\n}\r\nDep.target = null;\r\nlet stack = [];\r\nexport function pushTarget(watcher){\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\nexport function popTarget(){\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;\r\n","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n// 1） 当我们创建渲染watcher的时候我们会把当前的渲染watcher放到Dep.target上\r\n// 2) 调用_render() 会取值 走到get上\r\n// 每个属性有一个dep （属性就是被观察者） ， watcher就是观察者（属性变化了会通知观察者来更新） -》 观察者模式\r\nclass Watcher { // 不同组件有不同的watcher   目前只有一个 渲染根实例的\r\n    constructor(vm, exprOrFn, options,cb) {\r\n        this.id = id++;\r\n        this.renderWatcher = options; // 是一个渲染watcher\r\n\r\n        if(typeof exprOrFn === 'string'){\r\n            this.getter = function(){\r\n                return vm[exprOrFn]\r\n            }\r\n        }else{\r\n            this.getter = exprOrFn; // getter意味着调用这个函数可以发生取值操作\r\n        }\r\n\r\n      \r\n        this.deps = [];  // 后续我们实现计算属性，和一些清理工作需要用到\r\n        this.depsId = new Set();\r\n        this.lazy = options.lazy;\r\n        this.cb = cb;\r\n        this.dirty = this.lazy; // 缓存值\r\n        this.vm = vm;\r\n        this.user = options.user; // 标识是否是用户自己的watcher\r\n\r\n        this.value = this.lazy ? undefined :  this.get();\r\n       \r\n    }\r\n    addDep(dep) { // 一个组件 对应着多个属性 重复的属性也不用记录\r\n        let id = dep.id;\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this); // watcher已经记住了dep了而且去重了，此时让dep也记住watcher\r\n        }\r\n    }\r\n    evaluate(){\r\n        this.value =  this.get(); // 获取到用户函数的返回值 并且还要标识为脏 \r\n        this.dirty = false;\r\n    }\r\n    get() {\r\n        pushTarget(this)// 静态属性就是只有一份\r\n        let value = this.getter.call(this.vm); // 会去vm上取值  vm._update(vm._render) 取name 和age\r\n        popTarget() // 渲染完毕后就清空\r\n        return value;\r\n    }\r\n    depend(){ // watcher的depend 就是让watcher中dep去depend\r\n        let i =  this.deps.length;\r\n        while(i--){\r\n            // dep.depend()\r\n            this.deps[i].depend(); // 让计算属性watcher 也收集渲染watcher\r\n        }\r\n    }\r\n    update() {\r\n        if(this.lazy){\r\n            // 如果是计算属性  依赖的值变化了 就标识计算属性是脏值了\r\n            this.dirty = true;\r\n        }else{\r\n            queueWatcher(this); // 把当前的watcher 暂存起来\r\n            // this.get(); // 重新渲染\r\n        }\r\n    }\r\n    run() {\r\n        let oldValue = this.value;\r\n        let newValue = this.get();  // 渲染的时候用的是最新的vm来渲染的\r\n        if(this.user){\r\n            this.cb.call(this.vm,newValue,oldValue);\r\n        }\r\n    }\r\n}\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; // 防抖\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n    flushQueue.forEach(q => q.run()); // 在刷新的过程中可能还有新的watcher，重新放到queue中\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if (!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 不管我们的update执行多少次 ，但是最终只执行一轮刷新操作\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue, 0)\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0);\r\n    waiting = false;;\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb()); // 按照顺序依次执行\r\n}\r\n\r\n// nextTick 没有直接使用某个api 而是采用优雅降级的方式 \r\n// 内部先采用的是promise （ie不兼容）  MutationObserver(h5的api)  可以考虑ie专享的 setImmediate  setTimeout\r\n\r\n// let timerFunc;\r\n// if (Promise) {\r\n//     timerFunc = () => {\r\n//         Promise.resolve().then(flushCallbacks)\r\n//     }\r\n// }else if(MutationObserver){\r\n//     let observer = new MutationObserver(flushCallbacks); // 这里传入的回调是异步执行的\r\n//     let textNode = document.createTextNode(1);\r\n//     observer.observe(textNode,{\r\n//         characterData:true\r\n//     });\r\n//     timerFunc = () => {\r\n//         textNode.textContent = 2;\r\n//     }\r\n// }else if(setImmediate){\r\n//     timerFunc = () => {\r\n//        setImmediate(flushCallbacks);\r\n//     }\r\n// }else{\r\n//     timerFunc = () => {\r\n//         setTimeout(flushCallbacks);\r\n//      }\r\n// }\r\nexport function nextTick(cb) { // 先内部还是先用户的？\r\n    callbacks.push(cb); // 维护nextTick中的cakllback方法\r\n    if (!waiting) {\r\n        // timerFunc()\r\n        Promise.resolve().then(flushCallbacks)\r\n        waiting = true\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// 需要给每个属性增加一个dep， 目的就是收集watcher\r\n\r\n// 一个组件中 有多少个属性 （n个属性会对应一个视图） n个dep对应一个watcher\r\n// 1个属性 对应着多个组件  1个dep对应多个watcher\r\n// 多对多的关系\r\n\r\nexport default Watcher","\r\n// h()  _c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key;\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, key, data, children);\r\n}\r\n// _v();\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n// ast一样吗？ ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\r\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n        // ....\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom\"\r\n\r\n\r\nfunction createElm(vnode){\r\n    let {tag,data,children,text} = vnode;\r\n    if(typeof tag === 'string'){ // 标签\r\n        vnode.el =  document.createElement(tag); // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n        patchProps(vnode.el,data);\r\n        children.forEach(child => {\r\n            vnode.el.appendChild( createElm(child))\r\n        });\r\n    }else{\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\nfunction patchProps(el,props){\r\n    for(let key in props){\r\n        if(key === 'style'){ // style{color:'red'}\r\n            for(let styleName in props.style){\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        }else{\r\n            el.setAttribute(key,props[key]);\r\n        }\r\n    }\r\n}\r\nfunction patch(oldVNode,vnode){\r\n    // 写的是初渲染流程 \r\n    const isRealElement = oldVNode.nodeType;\r\n    if(isRealElement){\r\n        const elm = oldVNode; // 获取真实元素\r\n        const parentElm = elm.parentNode; // 拿到父元素\r\n        let newElm =  createElm(vnode);\r\n        parentElm.insertBefore(newElm,elm.nextSibling);\r\n        parentElm.removeChild(elm); // 删除老节点\r\n\r\n        return newElm\r\n    }else{\r\n        // diff算法\r\n    }\r\n}\r\n\r\n\r\nexport function initLifeCycle(Vue){\r\n    Vue.prototype._update = function(vnode){ // 将vnode转化成真实dom\r\n        const vm = this;\r\n        const el = vm.$el;\r\n\r\n        // patch既有初始化的功能  又有更新 \r\n        vm.$el = patch(el,vnode);\r\n    }\r\n\r\n    // _c('div',{},...children)\r\n    Vue.prototype._c = function(){\r\n       return  createElementVNode(this,...arguments)\r\n    }\r\n    // _v(text)\r\n    Vue.prototype._v = function(){\r\n        return createTextVNode(this,...arguments)\r\n    }\r\n    Vue.prototype._s = function(value){\r\n        if(typeof value !== 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n    Vue.prototype._render = function(){\r\n        // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\r\n        \r\n        return this.$options.render.call(this); // 通过ast语法转义后生成的render方法\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm,el){ // 这里的el 是通过querySelector处理过的\r\n    vm.$el = el;\r\n\r\n    // 1.调用render方法产生虚拟节点 虚拟DOM\r\n\r\n    const updateComponent = ()=>{\r\n        vm._update(vm._render()); // vm.$options.render() 虚拟节点\r\n    }\r\n\r\n    const watcher = new Watcher(vm,updateComponent,true); // true用于标识是一个渲染watcher\r\n    \r\n\r\n\r\n\r\n\r\n    // 2.根据虚拟DOM产生真实DOM \r\n\r\n    // 3.插入到el元素中\r\n\r\n}\r\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树  \r\n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\r\n// render函数会去产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创造真实的DOM\r\n\r\n\r\nexport function callHook(vm,hook){ // 调用钩子函数\r\n    const handlers = vm.$options[hook];\r\n    if(handlers){\r\n        handlers.forEach(handler=>handler.call(vm))\r\n    }\r\n}\r\n","// 我们希望重写数组中的部分方法\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n// newArrayProto.__proto__  = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [ // 找到所有的变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n] // concat slice 都不会改变原数组\r\nmethods.forEach(method => {\r\n    // arr.push(1,2,3)\r\n    newArrayProto[method] = function (...args) { // 这里重写了数组的方法\r\n        // push.call(arr)\r\n        // todo...\r\n        const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法 ， 函数的劫持  切片编程\r\n        // 我们需要对新增的 数据再次进行劫持\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift': // arr.unshift(1,2,3)\r\n                inserted = args;\r\n                break;\r\n            case 'splice':  // arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2);\r\n            default:\r\n                break;\r\n        }\r\n        // console.log(inserted); // 新增的内容\r\n        if(inserted) {\r\n            // 对新增的内容再次进行观测  \r\n            ob.observeArray(inserted);\r\n        }\r\n\r\n        // 走到这里 \r\n        ob.dep.notify(); // 数组变化了 通知对应的watcher实现更新逻辑\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observer{\r\n    constructor(data){\r\n\r\n        // 给每个对象都增加收集功能 \r\n        \r\n        this.dep = new Dep(); // 所有对象都要增加dep\r\n\r\n\r\n        // Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false // 将__ob__ 变成不可枚举 （循环的时候无法获取到）\r\n        });\r\n        // data.__ob__ = this; // 给数据加了一个标识 如果数据上有__ob__ 则说明这个属性被观测过了\r\n        if(Array.isArray(data)){\r\n            // 这里我们可以重写数组中的方法 7个变异方法 是可以修改数组本身的\r\n            data.__proto__ =  newArrayProto  // 需要保留数组原有的特性，并且可以重写部分方法\r\n            this.observeArray(data); // 如果数组中放的是对象 可以监控到对象的变化\r\n        }else{\r\n            this.walk(data);\r\n        }\r\n    }\r\n\r\n    walk(data){ // 循环对象 对属性依次劫持\r\n        // \"重新定义\"属性   性能差\r\n        Object.keys(data).forEach(key=> defineReactive(data,key,data[key]))\r\n    }\r\n    observeArray(data){ // 观测数组\r\n        data.forEach(item=> observe(item))\r\n    }\r\n}\r\n// 深层次嵌套会递归，递归多了性能差，不存在属性监控不到，存在的属性要重写方法  vue3-> proxy\r\nfunction dependArray(value){\r\n    for(let i = 0; i < value.length;i++){\r\n        let current = value[i]\r\n        current.__ob__ && current.__ob__.dep.depend();\r\n        if(Array.isArray(current)){\r\n            dependArray(current);\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target,key,value){ // 闭包  属性劫持\r\n    let childOb = observe(value); // 对所有的对象都进行属性劫持  childOb.dep 用来收集依赖的\r\n    let dep = new Dep(); // 每一个属性都有一个dep\r\n    Object.defineProperty(target,key,{\r\n        get(){ // 取值的时候 会执行get\r\n            if(Dep.target){\r\n                dep.depend(); // 让这个属性的收集器记住当前的watcher\r\n                if(childOb){\r\n                    childOb.dep.depend(); // 让数组和对象本身也实现依赖收集\r\n                    if(Array.isArray(value)){\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newValue){ // 修改的时候 会执行set\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n            dep.notify(); // 通知更新\r\n        }\r\n    })\r\n}\r\nexport function observe(data){\r\n    // 对这个对象进行劫持\r\n    if(typeof data !== 'object' || data == null){\r\n        return; // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer){ // 说明这个对象被代理过了\r\n        return data.__ob__;\r\n    }\r\n    // 如果一个对象被劫持过了，那就不需要再被劫持了 (要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过)\r\n\r\n    return new Observer(data);\r\n\r\n}\r\n","import Dep from \"./observe/dep\";\r\nimport { observe } from \"./observe/index\";\r\nimport Watcher from './observe/watcher'\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\nfunction initWatch(vm){\r\n    let watch = vm.$options.watch;\r\n    for(let key in watch){\r\n        const handler = watch[key]; // 字符串 数组 函数\r\n        if(Array.isArray(handler)){\r\n            for(let i = 0; i < handler.length;i++){\r\n                createWatcher(vm,key,handler[i]);\r\n            }\r\n        }else{\r\n            createWatcher(vm,key,handler);\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nfunction createWatcher(vm,key,handler){\r\n   // 字符串  函数\r\n    if(typeof handler === 'string'){\r\n        handler = vm[handler];\r\n    }\r\n    return vm.$watch(key,handler)\r\n}\r\n\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, { // vm.name\r\n        get() {\r\n            return vm[target][key]; // vm._data.name\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; // data可能是函数和对象\r\n    data = typeof data === 'function' ? data.call(vm) : data; // data是用户返回的对象\r\n\r\n    vm._data = data; // 我将返回的对象放到了_data上\r\n    // 对数据进行劫持 vue2 里采用了一个api defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data 用vm来代理就可以了 \r\n    for (let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed;\r\n    const watchers = vm._computedWatchers = {}; // 将计算属性watcher保存到vm上\r\n    for (let key in computed) {\r\n        let userDef = computed[key];\r\n\r\n        // 我们需要监控 计算属性中get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n\r\n        // 如果直接new Watcher 默认就会执行fn, 将属性和watcher对应起来 \r\n        watchers[key] = new Watcher(vm, fn, { lazy: true })\r\n\r\n        defineComputed(vm, key, userDef);\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    // const getter = typeof userDef === 'function' ? userDef : userDef.get;\r\n    const setter = userDef.set || (() => { })\r\n\r\n    // 可以通过实例拿到对应的属性\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    })\r\n}\r\n\r\n\r\n// 计算属性根本不会收集依赖 ，只会让自己的依赖属性去收集依赖\r\nfunction createComputedGetter(key) {\r\n    // 我们需要检测是否要执行这个getter\r\n    return function () {\r\n        const watcher = this._computedWatchers[key]; // 获取到对应属性的watcher\r\n        if (watcher.dirty) {\r\n            // 如果是脏的就去执行 用户传入的函数\r\n            watcher.evaluate(); // 求值后 dirty变为了false ,下次就不求值了\r\n        }\r\n        if (Dep.target) { // 计算属性出栈后 还要渲染watcher， 我应该让计算属性watcher里面的属性 也去收集上一层watcher\r\n            watcher.depend();\r\n        }\r\n        return watcher.value; // 最后返回的是watcher上的值\r\n    }\r\n}","import { compileToFunction } from \"./compiler\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nimport { mergeOptions } from \"./utils\";\r\n\r\n\r\nexport function initMixin(Vue) { // 就是给Vue增加init方法的\r\n    Vue.prototype._init = function (options) { // 用于初始化操作\r\n        // vue  vm.$options 就是获取用户的配置 \r\n        // 我们使用的 vue的时候 $nextTick $data $attr.....\r\n        const vm = this;\r\n\r\n        // 我们定义的全局指令和过滤器.... 都会挂载到实力上\r\n        vm.$options = mergeOptions(this.constructor.options,options); // 将用户的选项挂载到实例上\r\n\r\n\r\n        callHook(vm,'beforeCreate'); // 内部调用的是beforeCreate 写错了就不执行了\r\n        // 初始化状态, 初始化计算属性,watch\r\n        initState(vm);\r\n        callHook(vm,'created');\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el); // 实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options\r\n        if (!ops.render) { // 先进行查找有没有render函数 \r\n            let template; // 没有render看一下是否写了tempate, 没写template采用外部的template\r\n            if (!ops.template && el) { // 没有写模板 但是写了el\r\n                template = el.outerHTML\r\n            }else{\r\n                if(el){\r\n                    template = ops.template // 如果有el 则采用模板的内容\r\n                }\r\n            }\r\n            // 写了temlate 就用 写了的template\r\n            if(template && el){\r\n                // 这里需要对模板进行编译 \r\n                const render = compileToFunction(template);\r\n                ops.render = render; // jsx 最终会被编译成h('xxx')\r\n            }\r\n        }\r\n        mountComponent(vm,el); // 组件的挂载  \r\n         // 最终就可以获取render方法\r\n        // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n        // runtime是不包含模板编译的, 整个编译是打包的时候通过loader来转义.vue文件的, 用runtime的时候不能使用template\r\n\r\n    }\r\n}\r\n\r\n","import { initGlobalAPI } from \"./gloablAPI\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport Watcher, { nextTick } from \"./observe/watcher\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) { // options就是用户的选项\r\n    this._init(options); // 默认就调用了init\r\n}\r\n\r\nVue.prototype.$nextTick = nextTick\r\ninitMixin(Vue); // 扩展了init方法\r\ninitLifeCycle(Vue);\r\n\r\ninitGlobalAPI(Vue)\r\n\r\n\r\n\r\n// 最终调用的都是这个方法\r\nVue.prototype.$watch = function (exprOrFn, cb) {\r\n    // firstname\r\n    // ()=>vm.firstname\r\n\r\n    // firstname的值变化了 直接执行cb函数即可\r\n    new Watcher(this,exprOrFn,{user:true},cb)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Vue"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","item","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","get","dep","has","add","addSub","call","depend","queueWatcher","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","Promise","resolve","then","createElementVNode","data","vnode","createTextVNode","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","mountComponent","updateComponent","callHook","handlers","handler","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","dependArray","current","childOb","set","initState","opts","initData","computed","initComputed","watch","initWatch","createWatcher","$watch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","evaluate","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}
{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\n\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译处理  \r\n\r\n\r\nexport function parseHTML(html) { // html最开始肯定是一个  </div>\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = []; // 用于存放元素的\r\n    let currentParent; // 指向的是栈中的最后一个\r\n    let root;\r\n\r\n    // 最终需要转化成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n    // 利用栈型结构 来构造一颗树\r\n    function start(tag, attrs) {\r\n        let node =  createASTElement(tag,attrs); // 创造一个ast节点\r\n        if(!root){ // 看一下是否是空树\r\n            root = node; // 如果为空则当前是树的根节点\r\n        } \r\n        if(currentParent){\r\n            node.parent = currentParent; // 只赋予了parent属性\r\n            currentParent.children.push(node); // 还需要让父亲记住自己\r\n        }\r\n        stack.push(node);\r\n        currentParent = node; // currentParent为栈中的最后一个\r\n    }\r\n    function chars(text) { // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g,' '); // 如果空格超过2就删除2个以上的\r\n        text && currentParent.children.push({\r\n            type:TEXT_TYPE,\r\n            text,\r\n            parent:currentParent\r\n        });\r\n    }\r\n    function end(tag) {\r\n       let node =  stack.pop();  // 弹出最后一个, 校验标签是否合法\r\n       currentParent = stack[stack.length - 1];\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            // 如果不是开始标签的结束 就一直匹配下去\r\n            let attr, end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match;\r\n        }\r\n        return false; // 不是开始标签\r\n    }\r\n    while (html) {\r\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n        // 如果textEnd > 0说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<');  // 如果indexOf中的索引是0 则说明是个标签\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n            if (startTagMatch) { // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd); // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length); // 解析到的文本 \r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    let str = ''// {name,value}\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            // color:red;background:red => {color:'red'}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => { // qs 库\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},` // a:b,c:d,\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本\r\n        let text = node.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            //_v( _s(name)+'hello' + _s(name))\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            // split\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index; // 匹配的位置  {{name}} hello  {{name}} hello \r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${ast.children.length ? `,${children}` : ''\r\n        })`)\r\n\r\n    return code;\r\n}\r\nexport function compileToFunction(template) {\r\n\r\n    // 1.就是将template 转化成ast语法树\r\n    let ast = parseHTML(template);\r\n\r\n    // 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\r\n\r\n    // 模板引擎的实现原理 就是 with  + new Function\r\n\r\n    let code = codegen(ast);\r\n    code = `with(this){return ${code}}`;\r\n    let render = new Function(code); // 根据代码生成render函数\r\n\r\n    //  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\r\n\r\n    return render;\r\n}\r\n\r\n\r\n// <xxx\r\n// <namepsace:xxx\r\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa","\r\n// h()  _c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key;\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, key, data, children);\r\n}\r\n// _v();\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n// ast一样吗？ ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\r\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n        // ....\r\n    }\r\n}","import { createElementVNode, createTextVNode } from \"./vdom\"\r\n\r\n\r\nfunction createElm(vnode){\r\n    let {tag,data,children,text} = vnode;\r\n    if(typeof tag === 'string'){ // 标签\r\n        vnode.el =  document.createElement(tag); // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n        patchProps(vnode.el,data);\r\n        children.forEach(child => {\r\n            vnode.el.appendChild( createElm(child))\r\n        });\r\n    }else{\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\nfunction patchProps(el,props){\r\n    for(let key in props){\r\n        if(key === 'style'){ // style{color:'red'}\r\n            for(let styleName in props.style){\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        }else{\r\n            el.setAttribute(key,props[key]);\r\n        }\r\n    }\r\n}\r\nfunction patch(oldVNode,vnode){\r\n    // 写的是初渲染流程 \r\n    const isRealElement = oldVNode.nodeType;\r\n    if(isRealElement){\r\n        const elm = oldVNode; // 获取真实元素\r\n        const parentElm = elm.parentNode; // 拿到父元素\r\n        let newElm =  createElm(vnode);\r\n        parentElm.insertBefore(newElm,elm.nextSibling);\r\n        parentElm.removeChild(elm); // 删除老节点\r\n\r\n        return newElm\r\n    }else{\r\n        // diff算法\r\n    }\r\n}\r\n\r\n\r\nexport function initLifeCycle(Vue){\r\n    Vue.prototype._update = function(vnode){ // 将vnode转化成真实dom\r\n        const vm = this;\r\n        const el = vm.$el;\r\n\r\n        // patch既有初始化的功能  又有更新 \r\n        vm.$el = patch(el,vnode);\r\n    }\r\n\r\n    // _c('div',{},...children)\r\n    Vue.prototype._c = function(){\r\n       return  createElementVNode(this,...arguments)\r\n    }\r\n    // _v(text)\r\n    Vue.prototype._v = function(){\r\n        return createTextVNode(this,...arguments)\r\n    }\r\n    Vue.prototype._s = function(value){\r\n        if(typeof value !== 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n    Vue.prototype._render = function(){\r\n        // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\r\n        \r\n        return this.$options.render.call(this); // 通过ast语法转义后生成的render方法\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm,el){ // 这里的el 是通过querySelector处理过的\r\n    vm.$el = el;\r\n\r\n    // 1.调用render方法产生虚拟节点 虚拟DOM\r\n\r\n    vm._update(vm._render()); // vm.$options.render() 虚拟节点\r\n\r\n    // 2.根据虚拟DOM产生真实DOM \r\n\r\n    // 3.插入到el元素中\r\n\r\n}\r\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树  \r\n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\r\n// render函数会去产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创造真实的DOM\r\n\r\n","// 我们希望重写数组中的部分方法\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n// newArrayProto.__proto__  = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [ // 找到所有的变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n] // concat slice 都不会改变原数组\r\nmethods.forEach(method => {\r\n    // arr.push(1,2,3)\r\n    newArrayProto[method] = function (...args) { // 这里重写了数组的方法\r\n        // push.call(arr)\r\n        // todo...\r\n        const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法 ， 函数的劫持  切片编程\r\n        // 我们需要对新增的 数据再次进行劫持\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift': // arr.unshift(1,2,3)\r\n                inserted = args;\r\n                break;\r\n            case 'splice':  // arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2);\r\n            default:\r\n                break;\r\n        }\r\n        // console.log(inserted); // 新增的内容\r\n        if(inserted) {\r\n            // 对新增的内容再次进行观测  \r\n            ob.observeArray(inserted);\r\n        }\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\n\r\nclass Observer{\r\n    constructor(data){\r\n        // Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false // 将__ob__ 变成不可枚举 （循环的时候无法获取到）\r\n        });\r\n        // data.__ob__ = this; // 给数据加了一个标识 如果数据上有__ob__ 则说明这个属性被观测过了\r\n        if(Array.isArray(data)){\r\n            // 这里我们可以重写数组中的方法 7个变异方法 是可以修改数组本身的\r\n            data.__proto__ =  newArrayProto  // 需要保留数组原有的特性，并且可以重写部分方法\r\n            this.observeArray(data); // 如果数组中放的是对象 可以监控到对象的变化\r\n        }else{\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data){ // 循环对象 对属性依次劫持\r\n        // \"重新定义\"属性   性能差\r\n        Object.keys(data).forEach(key=> defineReactive(data,key,data[key]))\r\n    }\r\n    observeArray(data){ // 观测数组\r\n        data.forEach(item=> observe(item))\r\n    }\r\n}\r\nexport function defineReactive(target,key,value){ // 闭包  属性劫持\r\n    observe(value); // 对所有的对象都进行属性劫持\r\n    Object.defineProperty(target,key,{\r\n        get(){ // 取值的时候 会执行get\r\n            console.log('key',key)\r\n            return value\r\n        },\r\n        set(newValue){ // 修改的时候 会执行set\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\nexport function observe(data){\r\n    // 对这个对象进行劫持\r\n    if(typeof data !== 'object' || data == null){\r\n        return; // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer){ // 说明这个对象被代理过了\r\n        return data.__ob__;\r\n    }\r\n    // 如果一个对象被劫持过了，那就不需要再被劫持了 (要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过)\r\n\r\n    return new Observer(data);\r\n\r\n}\r\n","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, { // vm.name\r\n        get() {\r\n            return vm[target][key]; // vm._data.name\r\n        },\r\n        set(newValue){\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; // data可能是函数和对象\r\n    data = typeof data === 'function' ? data.call(vm) : data; // data是用户返回的对象\r\n\r\n    vm._data = data; // 我将返回的对象放到了_data上\r\n    // 对数据进行劫持 vue2 里采用了一个api defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data 用vm来代理就可以了 \r\n    for (let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}","import { compileToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) { // 就是给Vue增加init方法的\r\n    Vue.prototype._init = function (options) { // 用于初始化操作\r\n        // vue  vm.$options 就是获取用户的配置 \r\n        // 我们使用的 vue的时候 $nextTick $data $attr.....\r\n        const vm = this;\r\n        vm.$options = options; // 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el); // 实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options\r\n        if (!ops.render) { // 先进行查找有没有render函数 \r\n            let template; // 没有render看一下是否写了tempate, 没写template采用外部的template\r\n            if (!ops.template && el) { // 没有写模板 但是写了el\r\n                template = el.outerHTML\r\n            }else{\r\n                if(el){\r\n                    template = ops.template // 如果有el 则采用模板的内容\r\n                }\r\n            }\r\n            // 写了temlate 就用 写了的template\r\n            if(template && el){\r\n                // 这里需要对模板进行编译 \r\n                const render = compileToFunction(template);\r\n                ops.render = render; // jsx 最终会被编译成h('xxx')\r\n            }\r\n        }\r\n        mountComponent(vm,el); // 组件的挂载  \r\n         // 最终就可以获取render方法\r\n        // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n        // runtime是不包含模板编译的, 整个编译是打包的时候通过loader来转义.vue文件的, 用runtime的时候不能使用template\r\n\r\n    }\r\n}\r\n\r\n","import { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options){ // options就是用户的选项\r\n    this._init(options); // 默认就调用了init\r\n}\r\n\r\ninitMixin(Vue); // 扩展了init方法\r\ninitLifeCycle(Vue);\r\n\r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","vm","data","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","call","mountComponent","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","target","get","console","log","set","newValue","initState","opts","initData","proxy","_data","initMixin","_init","options","$mount","querySelector","ops","outerHTML"],"mappings":"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"}